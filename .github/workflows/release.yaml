name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"

      - name: Get ldflags env values
        run: |
          echo "BUILD_TIMESTAMP=$(date +'%s')" >> $GITHUB_ENV
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "COMMIT_HASH=${{ github.sha }}" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  version:
    runs-on: ubuntu-latest
    environment: production
    env:
      CHART_PATH: ./deploy/charts/burrito
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: main

      - name: Bump VERSION file
        run: |
          echo ${{ github.ref_name }} > VERSION

      - name: Bump Helm Chart versions
        run: |
          export CHART_VERSION=$(echo ${{ github.ref_name }} | sed 's/v//g')
          export APP_VERSION=${{ github.ref_name }}
          yq -i '.version = env(CHART_VERSION)' $CHART_PATH/Chart.yaml
          yq -i '.appVersion = env(APP_VERSION)' $CHART_PATH/Chart.yaml

      - name: Commit version to repository and open PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH_NAME="bump-version-${{ github.ref_name }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git switch -c $BRANCH_NAME
          git commit -m "chore(release): bump version to ${{ github.ref_name }}"
          git push origin $BRANCH_NAME
          gh pr create --fill --base main --head $BRANCH_NAME

  build-and-push:
    uses: ./.github/workflows/build-and-push.yaml
