# TODO: Make CRD install optional? or use --skip-crds Helm flag
# Custom Resource Definitions
# crds:
# install: true

# Burrito configuration
## Ref: https://padok-team.github.io/burrito/operator-manual/advanced-configuration/
config:
  # -- Create ConfigMap with Burrito configuration
  create: true
  # -- Annotations to be added to the ConfigMap
  annotations: {}

  # -- Burrito configuration in YAML format
  burrito:
    # -- Redis connection configuration
    redis:
      hostname: "burrito-redis"
      port: 6379
      database: 0
      # -- Prefer override with the BURRITO_REDIS_PASSWORD environment variable
      password: ""

    # Burrito controller configuration
    controller:
      # -- By default, the controller will watch all namespaces
      namespaces: []
      timers:
        driftDetection: 1h
        onError: 30s
        waitAction: 15s
        failureGracePeriod: 15s
      terraformMaxRetries: 5
      types: ["layer", "repository", "run", "pullrequest"]
      leaderElection:
        enabled: true
        id: 6d185457.terraform.padok.cloud
      metricsBindAddress: ":8080"
      healthProbeBindAddress: ":8081"
      kubernetesWebhookPort: 9443
      githubConfig:
        # -- Prefer override with the BURRITO_CONTROLLER_GITHUBCONFIG_APITOKEN environment variable
        apiToken: ""
      gitlabConfig:
        # -- Prefer override with the BURRITO_CONTROLLER_GITLABCONFIG_APITOKEN environment variable
        apiToken: ""
        url: ""

    # Burrito server configuration
    server:
      addr: ":8080"
      webhook:
        github:
          # -- Prefer override with the BURRITO_SERVER_WEBHOOK_GITHUB_SECRET environment variable
          secret: ""
        gitlab:
          # -- Prefer override with the BURRITO_SERVER_WEBHOOK_GITLAB_SECRET environment variable
          secret: ""

    # Burrito runners configuration
    runner:
      sshKnownHostsConfigMapName: burrito-ssh-known-hosts

redis:
  enabled: true
  metadata:
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: burrito-redis
  deployment:
    image:
      repository: redis
      tag: "7.0.12-alpine"
      pullPolicy: Always
    args: []
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 999
      seccompProfile:
        type: RuntimeDefault
  service:
    ports:
      - name: tcp-redis
        port: 6379
        targetPort: 6379

global:
  metadata:
    labels:
      app.kubernetes.io/part-of: burrito
    annotations: {}
  deployment:
    autoscaling:
      enabled: false
    replicas: 1
    image:
      repository: ghcr.io/padok-team/burrito
      tag: "" # By default use Chart's appVersion
      pullPolicy: Always
    podAnnotations: {}
    podSecurityContext:
      runAsNonRoot: true
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - "ALL"
    resources: {}
    ports: []
    envFrom: []
  service:
    enabled: true

controllers:
  metadata:
    labels:
      app.kubernetes.io/component: controllers
      app.kubernetes.io/name: burrito-controllers
  deployment:
    podAnnotations:
      kubectl.kubernetes.io/default-container: burrito
    command: ["burrito"]
    args: ["controllers", "start"]
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8081
      initialDelaySeconds: 15
      periodSeconds: 20
    readinessProbe:
      httpGet:
        path: /readyz
        port: 8081
      initialDelaySeconds: 15
      periodSeconds: 20
    envFrom: []
  service:
    enabled: false

server:
  metadata:
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: burrito-server
  deployment:
    podAnnotations:
      kubectl.kubernetes.io/default-container: burrito
    command: ["burrito"]
    args: ["server", "start"]
    ports:
      - name: http
        containerPort: 8080
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 15
      periodSeconds: 20
    readinessProbe:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 15
      periodSeconds: 20
    envFrom:
      # -- Reference the webhook secret here
      ## It should define a BURRITO_SERVER_WEBHOOK_GITHUB_SECRET and/or BURRITO_SERVER_WEBHOOK_GITLAB_SECRET key
      - secretRef:
          name: burrito-webhook-secret
          optional: true
  service:
    ports:
      - name: http
        port: 80
        targetPort: http
  ingress:
    enabled: false
    annotations: {}
    ingressClassName: nginx
    host: burrito.example.com
    tls: []

tenants: []
